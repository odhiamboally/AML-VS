using Aml.Shared.Entitties;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;

namespace Aml.Persistence.EntityTypeConfigurations;

public class AchMessageConfiguration : IEntityTypeConfiguration<AchMessage>
{
    public void Configure(EntityTypeBuilder<AchMessage> builder)
    {
        builder.ToTable("ACHMESSAGE");

        builder.HasKey(x => x.AchMessageId);

        builder.Property(x => x.AchMessageId)
            .IsRequired()
            .ValueGeneratedOnAdd(); // Auto-generated by the database

        builder.Property(x => x.Remitter)
            .IsRequired()
            .HasMaxLength(10);

        builder.Property(x => x.TrnRef)
            .IsRequired()
            .HasMaxLength(100);

        builder.Property(x => x.Remarks)
            .IsRequired();

        builder.Property(x => x.AccountNo)
            .IsRequired();

        builder.Property(x => x.Amount)
            .IsRequired();

        builder.Property(x => x.CurrencyId)
            .IsRequired();

        builder.Property(x => x.UserId)
            .IsRequired();

        builder.Property(x => x.RtgsTypeId)
            .IsRequired();

        builder.Property(x => x.BackupDate)
            .HasColumnType("datetime");

        builder.HasOne(x => x.Currency)
            .WithMany()
            .HasForeignKey(x => x.CurrencyId)
            .OnDelete(DeleteBehavior.Restrict);

        builder.HasOne(x => x.RtgsType)
            .WithMany()
            .HasForeignKey(x => x.RtgsTypeId)
            .OnDelete(DeleteBehavior.Restrict);

        builder.HasOne(x => x.User)
            .WithMany()
            .HasForeignKey(x => x.UserId)
            .OnDelete(DeleteBehavior.Restrict);
    }
}

